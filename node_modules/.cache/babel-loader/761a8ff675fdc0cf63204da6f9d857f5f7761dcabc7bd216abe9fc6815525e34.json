{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalprice: 0\n  },\n  reducers: {\n    addItem: (state, action) => {\n      state.items.push(action.payload);\n    },\n    removeItem: (state, action) => {\n      state.items = state.items.filter(x => x.card.info.id !== action.payload.id);\n    },\n    clearItem: state => {\n      state.items = [];\n    },\n    getTotalAmount: (state, action) => {\n      let {\n        total,\n        quantity\n      } = items.reduce((acc, curr) => {\n        const {\n          price\n        } = items;\n        const itemtotal = price;\n        acc.totalAmount += itemtotal;\n        return acc;\n      }, {\n        tatalAmount: 0\n      });\n    },\n    qualityIncrease: (state, action) => {},\n    qualityDecrease: (state, action) => {}\n  }\n});\nexport const {\n  addItem,\n  removeItem,\n  clearItem,\n  qualityIncrease,\n  qualityDecrease\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalprice","reducers","addItem","state","action","push","payload","removeItem","filter","x","card","info","id","clearItem","getTotalAmount","total","quantity","reduce","acc","curr","price","itemtotal","totalAmount","tatalAmount","qualityIncrease","qualityDecrease","actions","reducer"],"sources":["C:/Users/Mangesh Sali/OneDrive/Desktop/Demo/food/src/Utils/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalprice: 0,\r\n  },\r\n  reducers: {\r\n    addItem: (state, action) => {\r\n      state.items.push(action.payload);\r\n    },\r\n    removeItem: (state, action) => {\r\n      state.items = state.items.filter(\r\n        (x) => x.card.info.id !== action.payload.id\r\n      );\r\n    },\r\n    clearItem: (state) => {\r\n      state.items = [];\r\n    },\r\n    getTotalAmount: (state, action) => {\r\n      let { total, quantity } = items.reduce(\r\n        (acc, curr) => {\r\n          const { price } = items;\r\n          const itemtotal = price;\r\n\r\n          acc.totalAmount += itemtotal;\r\n          return acc;\r\n        },\r\n        { tatalAmount: 0 }\r\n      );\r\n    },\r\n    qualityIncrease: (state, action) => {},\r\n\r\n    qualityDecrease: (state, action) => {},\r\n  },\r\n});\r\n\r\nexport const {\r\n  addItem,\r\n  removeItem,\r\n  clearItem,\r\n  qualityIncrease,\r\n  qualityDecrease,\r\n} = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACJ,KAAK,CAACM,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAClC,CAAC;IACDC,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACS,MAAM,CAC7BC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAACC,IAAI,CAACC,EAAE,KAAKR,MAAM,CAACE,OAAO,CAACM,EAAE,CAC5C;IACH,CAAC;IACDC,SAAS,EAAGV,KAAK,IAAK;MACpBA,KAAK,CAACJ,KAAK,GAAG,EAAE;IAClB,CAAC;IACDe,cAAc,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MACjC,IAAI;QAAEW,KAAK;QAAEC;MAAS,CAAC,GAAGjB,KAAK,CAACkB,MAAM,CACpC,CAACC,GAAG,EAAEC,IAAI,KAAK;QACb,MAAM;UAAEC;QAAM,CAAC,GAAGrB,KAAK;QACvB,MAAMsB,SAAS,GAAGD,KAAK;QAEvBF,GAAG,CAACI,WAAW,IAAID,SAAS;QAC5B,OAAOH,GAAG;MACZ,CAAC,EACD;QAAEK,WAAW,EAAE;MAAE,CAAC,CACnB;IACH,CAAC;IACDC,eAAe,EAAEA,CAACrB,KAAK,EAAEC,MAAM,KAAK,CAAC,CAAC;IAEtCqB,eAAe,EAAEA,CAACtB,KAAK,EAAEC,MAAM,KAAK,CAAC;EACvC;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXF,OAAO;EACPK,UAAU;EACVM,SAAS;EACTW,eAAe;EACfC;AACF,CAAC,GAAG7B,SAAS,CAAC8B,OAAO;AACrB,eAAe9B,SAAS,CAAC+B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}